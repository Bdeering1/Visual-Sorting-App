{"version":3,"sources":["Utility/util.js","Utility/arrayMethods.js","State/actions.js","State/reducers.js","State/store.js","Components/Graph/Graph.js","Components/SideBar/SideBar.js","Components/Menu/Menu.js","Components/Interface.js","State/AppWrapper.js","Tests/reportWebVitals.js","index.js"],"names":["generateArray","min","max","elements","array","i","push","randFromInterval","swapInArray","first","second","temp","setTwo","val","sleep","milliseconds","Promise","resolve","setTimeout","Math","floor","random","getArraySize","store","getState","sorting","arraySize","setArray","newArray","dispatch","updateArray","length","setSelected","newSelected","updateSelected","bubbleSort","a","currentArray","currentSelection","interface","selected","j","SET_COLORS","UPDATE_ARRAY","UPDATE_SELECTED","SORTING_STARTED","SORTING_STOPPED","type","newSize","actions","resetArray","isSorting","updateSize","defInterfaceState","colors","defSortingState","rootReducer","combineReducers","state","action","colorObject","createStore","applyMiddleware","thunk","Graph","props","className","map","value","idx","style","height","backgroundColor","accent","SideBar","handleChange","bind","heightRatio","e","this","target","outputPos","id","onChange","width","htmlFor","color","text","light","bottom","React","Component","Menu","btnCount","buttons","onClick","button","borderColor","Interface","setColors","dark","Container","connect","bindActionCreators","AppWrapper","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6ee393bb.chunk.js","sourcesContent":["export const generateArray = (min, max, elements) => {\n    const array = [];\n    for (let i = 0; i < elements; i++) {\n        array.push(randFromInterval(min, max));\n    }\n    return array;\n}\n\nexport const swapInArray = (first, second, array) => {\n    let temp = array[first];\n    array[first] = array[second];\n    array[second] = temp;\n    return [...array];\n}\nexport const setTwo = (first, second, array, val) => {\n    array[first] = val;\n    array[second] = val;\n    return [...array];\n}\n\nexport const sleep = (milliseconds) => {\n    return new Promise(resolve => setTimeout(resolve, milliseconds));\n}\n\n\nconst randFromInterval = (min, max) => {\n    return Math.floor(Math.random() * (max - min + 1) + min);\n}","import store from '../State/store';\nimport { updateArray, updateSelected } from '../State/actions';\nimport { generateArray, swapInArray, setTwo, sleep } from './util';\n\n\nconst DEFAULT_ARRAY_SIZE = 20;\nconst getArraySize = () => {\n    return store.getState().sorting.arraySize || DEFAULT_ARRAY_SIZE;\n}\nconst setArray = (newArray) => store.dispatch(updateArray(newArray, newArray.length));\nconst setSelected = (newSelected) => store.dispatch(updateSelected(newSelected));\n\n\nexport const resetArray = () => {\n    setArray(generateArray(10, 900, getArraySize()));\n    setSelected(generateArray(0, 0, getArraySize()));\n}\n\nexport const updateSize = (newSize) => {\n    setArray(generateArray(10, 900, newSize));\n    setSelected(generateArray(0, 0, newSize));\n}\n\nexport const bubbleSort = async () => {\n    let arraySize = getArraySize();\n    let currentArray = [...store.getState().sorting.array]; /* spread operator prevents mutation */\n    let currentSelection = [...store.getState().interface.selected];\n    for (let i = 0; i < arraySize - 1; i++) {\n        for (let j = 0; j < arraySize-i-1; j++) {\n            setSelected(setTwo(j, j + 1, currentSelection, 1));\n            await sleep(10000 / (arraySize*arraySize));\n            if (currentArray[j] > currentArray[j + 1]) {\n                setArray(swapInArray(j, j + 1, currentArray));\n                await sleep(10000 / (arraySize*arraySize));\n            }\n            setSelected(setTwo(j, j + 1, currentSelection, 0));\n        }\n    }\n}","import { resetArray, updateSize, bubbleSort } from '../Utility/arrayMethods';\n\nexport const SET_COLORS = 'SET_COLORS';\nexport const UPDATE_ARRAY = 'UPDATE_ARRAY';\nexport const UPDATE_SELECTED = 'UPDATE_SELECTED';\nexport const SORTING_STARTED = 'SORTING_STARTED';\nexport const SORTING_STOPPED = 'SORTING_STOPPED';\n\n\n//Interface Actions\nexport const setColors = (colorObject) => {\n    return {\n        type: SET_COLORS,\n        colorObject\n    }\n}\nexport const updateSelected = (newSelected) => {\n    return {\n        type: UPDATE_SELECTED,\n        newSelected\n    }\n}\n\n//Sorting Actions\nexport const updateArray = (newArray, newSize) => {\n    return {\n        type: UPDATE_ARRAY,\n        newArray,\n        newSize\n    }\n}\nconst startedSorting = () => {\n    return {\n        type: SORTING_STARTED\n    }\n}\nconst stoppedSorting = () => {\n    return {\n        type: SORTING_STOPPED\n    }\n}\n\n//Composite Actions\nconst callResetArray = () => {\n    return (dispatch, getState) => {\n        if (getState().sorting.isSorting) return;\n        resetArray();\n    }\n}\nconst callUpdateSize = (newSize) => {\n    return (dispatch, getState) => {\n        if (getState().sorting.isSorting) return;\n        updateSize(newSize);\n    }\n}\n\n//Asynchronous Actions\nconst startBubbleSort = () => {\n    return async (dispatch, getState) => {\n        if (getState().sorting.isSorting) return;\n        dispatch(startedSorting());\n        await bubbleSort();\n        dispatch(stoppedSorting());\n    }\n}\n\nexport const actions = {\n    resetArray: callResetArray,\n    updateSize: callUpdateSize,\n    bubbleSort: startBubbleSort\n}","import { combineReducers } from 'redux';\nimport { SET_COLORS, UPDATE_ARRAY, UPDATE_SELECTED, SORTING_STARTED, SORTING_STOPPED } from './actions';\n\n\n//Interface\nconst defInterfaceState = {\n    colors: {},\n    selected: []\n}\nconst interfaceReducer = (state = defInterfaceState, action) => {\n    switch (action.type) {\n        case SET_COLORS:\n            return {\n                ...state,\n                colors: action.colorObject\n            }\n        case UPDATE_SELECTED:\n            return {\n                ...state,\n                selected: action.newSelected\n            }\n        default:\n            return state;\n    }\n}\n\n//Sorting\nconst defSortingState = {\n    array: [],\n    arraySize: 0,\n    isSorting: false\n}\nconst sortingReducer = (state = defSortingState, action) => {\n    switch (action.type) {\n        case UPDATE_ARRAY:\n            return {\n                ...state,\n                array: action.newArray,\n                arraySize: action.newSize\n            }\n        case SORTING_STARTED:\n            return {\n                ...state,\n                isSorting: true\n            }\n        case SORTING_STOPPED:\n            return {\n                ...state,\n                isSorting: false\n            }\n        default:\n            return state;\n    }\n}\n\n/* a composed reducer isn't required for the complexity of this project, but I wanted to include one to get practice and demonstrate my Redux knowledge */\nconst rootReducer = combineReducers({\n    interface: interfaceReducer,\n    sorting: sortingReducer\n});\n\nexport default rootReducer;","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\n\nconst store = createStore(\n    rootReducer,\n    applyMiddleware(thunk)\n);\n\n\nexport default store;","import './Graph.css';\n\nconst Graph = (props) => {\n    return (\n      <div\n        className=\"graph\"\n        //style={{backgroundColor: props.colors.light, borderColor: props.colors.text}}\n      >\n        {\n          props.array.map((value, idx) => (\n            <div\n              key={idx}\n              style={{\n                height: `${value/10}%`,\n                backgroundColor: props.selected[idx] ? props.colors.selected : props.colors.accent\n              }}\n            />\n          ))\n        }\n      </div>\n    );\n}\n\n\nexport default Graph;","import React from 'react';\nimport './SideBar.css';\n\n\nexport default class SideBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n    this.state = {\n      min: 3,\n      max: 60,\n      heightRatio: 0.8\n    }\n  }\n\n  handleChange(e) {\n    this.props.updateSize(e.target.value);\n  }\n\n  render() {\n    let outputPos = ((this.props.arraySize - this.state.min) * 100) / (this.state.max - this.state.min);\n    return (\n      <div className=\"sidebar\">\n        <input\n          type=\"range\"\n          min={this.state.min} max={this.state.max}\n          value={this.props.arraySize}\n          className=\"slider\"\n          id=\"range-slider\"\n          onChange={this.handleChange}\n          style={{width: this.state.heightRatio*100 + \"vh\"}}\n        />\n        <output\n          htmlFor=\"range-slider\"\n          className=\"counter\"\n          style={{\n            color: this.props.colors.text,\n            backgroundColor: this.props.colors.light,\n            bottom: `calc(${outputPos * this.state.heightRatio}vh - ${outputPos}*28px/100)`\n          }}\n        >{this.props.arraySize}</output>\n      </div>\n    );\n  }\n}","import React from 'react';\nimport './Menu.css';\n\n\nexport default class Menu extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            btnCount: 2,\n            buttons: [\n                {text: 'Generate New Array', onClick: this.props.actions.resetArray},\n                {text: 'Bubble Sort', onClick: this.props.actions.bubbleSort}\n                /* {text: 'Algo 2', onClick: this.props.actions.resetArray},\n                {text: 'Algo 3', onClick: this.props.actions.resetArray},\n                {text: 'Algo 4', onClick: this.props.actions.resetArray} */\n            ]\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"menu-container\">\n                {this.state.buttons.map((button, idx) => (\n                    <button\n                        onClick={button.onClick}\n                        className=\"menu-item\"\n                        key={idx}\n                        style={{\n                            backgroundColor: this.props.colors.accent,\n                            borderColor: this.props.colors.text,\n                            color: this.props.colors.light,\n                            width: 90 / this.state.btnCount + \"%\"\n                        }}\n                    >{button.text}</button>\n                ))}\n            </div>\n        );\n    }\n}","import React from 'react';\nimport './Interface.css';\nimport Graph from './Graph/Graph';\nimport SideBar from './SideBar/SideBar';\nimport Menu from './Menu/Menu';\n\n\nexport default class Interface extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  componentDidMount() {\n    this.props.actions.resetArray();\n    this.props.setColors({\n      light:'#E0E0E0',\n      dark:'#222225',\n      accent:'#004BA4',\n      selected: '#D65265',\n      text:'#151515'\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"interface\" style={{backgroundColor: this.props.colors.dark}}>\n        <div className=\"grid-wrapper\">\n          <Graph array={this.props.array} selected={this.props.selected} colors={this.props.colors} arraySize={this.props.arraySize}/>\n          <SideBar updateSize={this.props.actions.updateSize} arraySize={this.props.arraySize} colors={this.props.colors}/>\n          <Menu actions={this.props.actions} colors={this.props.colors}/>\n        </div>\n      </div>\n    );\n  }\n}","import React from 'react';\nimport { Provider, connect } from 'react-redux';\nimport store from './store';\nimport { setColors, actions } from './actions';\nimport Interface from '../Components/Interface';\nimport { bindActionCreators } from 'redux';\n\n\nconst mapStateToProps = (state) => {\n    return {\n        colors: state.interface.colors,\n        selected: state.interface.selected,\n        array: state.sorting.array,\n        arraySize: state.sorting.arraySize\n    }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        setColors: (colorObject) => { dispatch(setColors(colorObject)) },\n        actions: bindActionCreators(actions, dispatch)\n    }\n};\n\nconst Container = connect(mapStateToProps, mapDispatchToProps)(Interface);\n\n\nexport default class AppWrapper extends React.Component {\n    render() {\n        return (\n            <Provider store={store}>\n                <Container />\n            </Provider>\n        );\n    }\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport AppWrapper from './State/AppWrapper';\nimport reportWebVitals from './Tests/reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <AppWrapper />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}