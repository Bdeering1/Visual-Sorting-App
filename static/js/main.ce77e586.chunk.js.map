{"version":3,"sources":["Utility/util.js","Utility/arrayMethods.js","State/actions.js","State/reducers.js","State/store.js","Components/Graph/Graph.js","Components/Slider/Slider.js","Components/SidePanel/SidePanel.js","Components/Menu/Menu.js","Components/Interface.js","State/AppWrapper.js","Tests/reportWebVitals.js","index.js"],"names":["generateArray","min","max","elements","array","i","push","randFromInterval","swapInArray","first","second","temp","swapSortedInArray","start","sorted","length","setTwo","val","selectArea","sleep","milliseconds","Promise","resolve","setTimeout","Math","floor","random","getArraySize","store","getState","sorting","arraySize","setArray","newArray","dispatch","updateArray","setSelected","newSelected","updateSelected","initArray","animTime","a","resetArray","updateSize","newSize","bubbleSort","currentArray","currentSelection","interface","selected","j","mergeSortCaller","mergeSort","unsortedArray","selection","fullArray","middle","left","slice","right","merge","leftArr","rightArr","leftIdx","rightIdx","log","concat","quickSortCaller","quickSort","low","high","partition","pivotIdx","pivot","SET_COLORS","UPDATE_SELECTED","START_INIT","END_INIT","START_TRANSITION","END_TRANSITION","UPDATE_ARRAY","UPDATE_MAX_SIZE","SORTING_STARTED","SORTING_STOPPED","type","startedSorting","stoppedSorting","thunkActions","init","isSorting","updateMax","newMax","maxSize","defInterfaceState","colors","transition","initialized","defSortingState","minSize","rootReducer","combineReducers","state","action","colorObject","createStore","applyMiddleware","thunk","Graph","props","className","style","backgroundColor","light","map","value","idx","height","accent","SideBar","handleChange","bind","heightRatio","e","this","target","outputPos","opacity","id","aria-label","onChange","width","query","htmlFor","color","text","bottom","React","Component","SidePanel","Menu","btnCount","buttons","onClick","actions","setState","background","button","borderColor","display","Interface","updateQuery","setColors","backdrop","window","addEventListener","innerHeight","document","documentElement","clientHeight","body","setProperty","matchMedia","matches","Container","connect","bindActionCreators","AppWrapper","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.ce77e586.chunk.js","sourcesContent":["export const generateArray = (min, max, elements) => {\n    const array = [];\n    for (let i = 0; i < elements; i++) {\n        array.push(randFromInterval(min, max));\n    }\n    return array;\n}\n\nexport const swapInArray = (first, second, array) => {\n    let temp = array[first];\n    array[first] = array[second];\n    array[second] = temp;\n    return [...array];\n}\nexport const swapSortedInArray = (start, sorted, array) => {\n    for (let i = 0; i < sorted.length; i++) {\n        array[start + i] = sorted[i];\n    }\n    return [...array];\n}\nexport const setTwo = (first, second, val, array) => {\n    array[first] = val;\n    array[second] = val;\n    return [...array];\n}\nexport const selectArea = (start, length, val, array) => {\n    for (let i = 0; i < length; i++) {\n        array[start + i] = val;\n    }\n    return [...array];\n}\n\nexport const sleep = (milliseconds) => {\n    return new Promise(resolve => setTimeout(resolve, milliseconds));\n}\n\n\nconst randFromInterval = (min, max) => {\n    return Math.floor(Math.random() * (max - min + 1) + min);\n}","import store from '../State/store';\nimport { updateArray, updateSelected } from '../State/actions';\nimport { generateArray, swapInArray, swapSortedInArray, setTwo, selectArea, sleep } from './util';\n\n\nconst DEFAULT_ARRAY_SIZE = 32;\nconst getArraySize = () => {\n    return store.getState().sorting.arraySize || DEFAULT_ARRAY_SIZE;\n}\nconst setArray = (newArray) => store.dispatch(updateArray(newArray, newArray.length));\nconst setSelected = (newSelected) => store.dispatch(updateSelected(newSelected));\n\n\nexport const initArray = async (animTime) => {\n    setArray(generateArray(0, 0, getArraySize()));\n    setSelected(generateArray(0, 0, getArraySize()));\n    await sleep(animTime); /* waiting for title to animate */\n}\n\nexport const resetArray = async (animTime) => {\n    setArray(generateArray(0, 875, getArraySize()));\n    await sleep(animTime); /* waiting for animation to finish */\n}\n\nexport const updateSize = (newSize) => {\n    setArray(generateArray(10, 900, newSize));\n    setSelected(generateArray(0, 0, newSize));\n}\n\nexport const sizeTooLarge = () => {\n    return (store.getState().sorting.maxSize < store.getState().sorting.arraySize);\n}\n\n\n/* BUBBLE SORT */\nexport const bubbleSort = async () => {\n    let arraySize = getArraySize();\n    let currentArray = [...store.getState().sorting.array]; /* spread operator prevents mutation */\n    let currentSelection = [...store.getState().interface.selected];\n\n    for (let i = 0; i < arraySize - 1; i++) {\n        for (let j = 0; j < arraySize-i-1; j++) {\n            setSelected(setTwo(j, j + 1, 1, currentSelection));\n            await sleep(10000 / (arraySize*arraySize));\n            if (currentArray[j] > currentArray[j + 1]) {\n                setArray(swapInArray(j, j + 1, currentArray));\n                await sleep(10000 / (arraySize*arraySize));\n            }\n            setSelected(setTwo(j, j + 1, 0, currentSelection));\n        }\n    }\n}\n\n\n/* MERGE SORT */\nexport const mergeSortCaller = async () => {\n    let currentArray = [...store.getState().sorting.array]; /* spread operator prevents mutation */\n    let currentSelection = [...store.getState().interface.selected];\n\n    setArray(await mergeSort(currentArray, currentSelection, currentArray, 0));\n}\n\nconst mergeSort = async (unsortedArray, selection, fullArray, start) => {\n    if (unsortedArray.length <= 1) {\n        return unsortedArray;\n    }\n\n    const middle = Math.floor(unsortedArray.length / 2);\n    const left = unsortedArray.slice(0, middle);\n    const right = unsortedArray.slice(middle);\n\n    return await merge( /* extra arguments are used to update state array during sorting */\n        await mergeSort(left, selection, fullArray, start),\n        await mergeSort(right, selection, fullArray, start + middle),\n        start,\n        start + middle,\n        selection,\n        fullArray\n    );\n}\n\nconst merge = async (leftArr, rightArr, start, middle, selection, fullArray) => {\n    let sorted = [];\n    let leftIdx = 0, rightIdx = 0;\n\n    while (leftIdx < leftArr.length && rightIdx < rightArr.length) {\n        setSelected(setTwo(start + leftIdx, middle + rightIdx, 1, selection));\n        await sleep(10000 / (selection.length * Math.log(selection.length)));\n        setSelected(setTwo(start + leftIdx, middle + rightIdx, 0, selection));\n\n        if (leftArr[leftIdx] < rightArr[rightIdx]) {\n            sorted.push(leftArr[leftIdx]);\n            leftIdx++;\n        } else {\n            sorted.push(rightArr[rightIdx]);\n            rightIdx++;\n        }\n    }\n\n    sorted = sorted.concat(leftArr.slice(leftIdx)).concat(rightArr.slice(rightIdx));\n\n    setArray(swapSortedInArray(start, sorted, fullArray));\n    setSelected(selectArea(start, sorted.length, 1, selection));\n    await sleep(10000 / selection.length);\n    setSelected(selectArea(start, sorted.length, 0, selection));\n    return sorted;\n}\n\n\n/* QUICK SORT (Hoare partition scheme) */\nexport const quickSortCaller = async () => {\n    let currentArray = [...store.getState().sorting.array]; /* spread operator prevents mutation */\n    let currentSelection = [...store.getState().interface.selected];\n\n    setArray(await quickSort(currentArray, 0, currentArray.length - 1, currentSelection));\n}\n\nexport const quickSort = async (array, low, high, selection) => {\n    if (low < high) {\n        let pivotIdx = await partition(array, low, high, selection);\n        await quickSort(array, low, pivotIdx, selection);\n        await quickSort(array, pivotIdx + 1, high, selection);\n    }\n    return array;\n}\n\nconst partition = async (array, low, high, selection) => {\n    let pivotIdx = Math.floor((low + high) / 2);\n    setSelected(selectArea(pivotIdx, 1, 1, selection));\n    await sleep(10000 / (selection.length * Math.log(selection.length)));\n    let pivot = array[pivotIdx];\n    let i = low - 1, j = high + 1;\n    while (true) {\n        do {\n            i++;\n            setSelected(selectArea(i, 1, 1, selection));\n            await sleep(5000 / (selection.length * Math.log(selection.length)));\n            //setSelected(selectArea(i, 1, 0, selection));\n        } while (array[i] < pivot);\n        do {\n            j--;\n            setSelected(selectArea(j, 1, 1, selection));\n            await sleep(5000 / (selection.length * Math.log(selection.length)));\n            //setSelected(selectArea(j, 1, 0, selection));\n        } while (array[j] > pivot);\n        if (i >= j) {\n            setSelected(selectArea(pivotIdx, 1, 0, selection));\n            setSelected(selectArea(low, high - low + 1, 0, selection));\n            return j;\n        }\n        setSelected(setTwo(i, j, 1, selection));\n        await sleep(10000 / (selection.length * Math.log(selection.length)));\n        swapInArray(i, j, array);\n        setArray([...array]);\n        await sleep(10000 / (selection.length * Math.log(selection.length)));\n        //setSelected(setTwo(i, j, 0, selection));\n    }\n}","import { initArray, resetArray, updateSize, sizeTooLarge, bubbleSort, mergeSortCaller, quickSortCaller } from '../Utility/arrayMethods';\n\nexport const SET_COLORS = 'SET_COLORS';\nexport const UPDATE_SELECTED = 'UPDATE_SELECTED';\nexport const START_INIT  = 'START_INIT';\nexport const END_INIT  = 'END_INIT';\nexport const START_TRANSITION  = 'START_TRANSITION';\nexport const END_TRANSITION  = 'END_TRANSITION';\nexport const UPDATE_ARRAY = 'UPDATE_ARRAY';\nexport const UPDATE_MAX_SIZE = 'UPDATE_MAX_SIZE';\nexport const SORTING_STARTED = 'SORTING_STARTED';\nexport const SORTING_STOPPED = 'SORTING_STOPPED';\n\n\n//Interface Actions\nexport const setColors = (colorObject) => {\n    return {\n        type: SET_COLORS,\n        colorObject\n    }\n}\nexport const updateSelected = (newSelected) => {\n    return {\n        type: UPDATE_SELECTED,\n        newSelected\n    }\n}\nconst startInit = () => {\n    return {\n        type: START_INIT\n    }\n}\nconst endInit = () => {\n    return {\n        type: END_INIT\n    }\n}\nconst startTransition = () => {\n    return {\n        type: START_TRANSITION\n    }\n}\nconst endTransition = () => {\n    return {\n        type: END_TRANSITION\n    }\n}\n\n//Sorting Actions\nexport const updateArray = (newArray, newSize) => {\n    return {\n        type: UPDATE_ARRAY,\n        newArray,\n        newSize\n    }\n}\nconst updateMax = (newMax) => {\n    return {\n        type: UPDATE_MAX_SIZE,\n        newMax\n    }\n}\nconst startedSorting = () => {\n    return {\n        type: SORTING_STARTED\n    }\n}\nconst stoppedSorting = () => {\n    return {\n        type: SORTING_STOPPED\n    }\n}\n\n//Redux Thunk Actions\nconst initSequence = () => {\n    return async (dispatch) => {\n        await initArray(2700);\n        dispatch(startInit());\n        await resetArray(600);\n        dispatch(endInit());\n    }\n}\nconst callResetArray = () => {\n    return async (dispatch, getState) => {\n        if (getState().sorting.isSorting) return;\n        dispatch(startedSorting());\n        dispatch(startTransition());\n        await resetArray(200);\n        dispatch(stoppedSorting());\n        dispatch(endTransition());\n    }\n}\nconst callUpdateSize = (newSize) => {\n    return (dispatch, getState) => {\n        if (getState().sorting.isSorting) return;\n        updateSize(newSize);\n    }\n}\nconst updateMaxSize = (newMax) => {\n    return (dispatch) => {\n        dispatch(updateMax(newMax));\n        if (sizeTooLarge())\n            updateSize(newMax);\n    }\n}\nconst startBubbleSort = () => {\n    return async (dispatch, getState) => {\n        if (getState().sorting.isSorting) return;\n        dispatch(startedSorting());\n        await bubbleSort();\n        dispatch(stoppedSorting());\n    }\n}\nconst startMergeSort = () => {\n    return async (dispatch, getState) => {\n        if (getState().sorting.isSorting) return;\n        dispatch(startedSorting());\n        await mergeSortCaller();\n        dispatch(stoppedSorting());\n    }\n}\nconst startQuickSort = () => {\n    return async (dispatch, getState) => {\n        if (getState().sorting.isSorting) return;\n        dispatch(startedSorting());\n        await quickSortCaller();\n        dispatch(stoppedSorting());\n    }\n}\n\nexport const thunkActions = {\n    init: initSequence,\n    resetArray: callResetArray,\n    updateSize: callUpdateSize,\n    updateMax: updateMaxSize,\n    bubbleSort: startBubbleSort,\n    mergeSort: startMergeSort,\n    quickSort: startQuickSort\n}","import { combineReducers } from 'redux';\nimport { SET_COLORS, UPDATE_SELECTED, START_INIT, END_INIT, START_TRANSITION, END_TRANSITION, UPDATE_ARRAY, UPDATE_MAX_SIZE, SORTING_STARTED, SORTING_STOPPED } from './actions';\n\n\n//Interface\nconst defInterfaceState = {\n    colors: {},\n    selected: [],\n    transition: false,\n    initialized: 0\n}\nconst interfaceReducer = (state = defInterfaceState, action) => {\n    switch (action.type) {\n        case SET_COLORS:\n            return {\n                ...state,\n                colors: action.colorObject\n            }\n        case UPDATE_SELECTED:\n            return {\n                ...state,\n                selected: action.newSelected\n            }\n        case START_INIT:\n            return {\n                ...state,\n                initialized: 1\n            }\n        case END_INIT:\n                return {\n                    ...state,\n                    initialized: 2\n                }\n        case START_TRANSITION:\n            return {\n                ...state,\n                transition: true\n            }\n        case END_TRANSITION:\n            return {\n                ...state,\n                transition: 0\n            }\n        default:\n            return state;\n    }\n}\n\n//Sorting\nconst defSortingState = {\n    array: [],\n    arraySize: 0,\n    minSize: 4,\n    maxSize: 48,\n    isSorting: false\n}\nconst sortingReducer = (state = defSortingState, action) => {\n    switch (action.type) {\n        case UPDATE_ARRAY:\n            return {\n                ...state,\n                array: action.newArray,\n                arraySize: action.newSize\n            }\n        case UPDATE_MAX_SIZE:\n            return {\n                ...state,\n                maxSize: action.newMax\n            }\n        case SORTING_STARTED:\n            return {\n                ...state,\n                isSorting: true\n            }\n        case SORTING_STOPPED:\n            return {\n                ...state,\n                isSorting: false\n            }\n        default:\n            return state;\n    }\n}\n\nconst rootReducer = combineReducers({\n    interface: interfaceReducer,\n    sorting: sortingReducer\n});\n\nexport default rootReducer;","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\n\nconst store = createStore(\n    rootReducer,\n    applyMiddleware(thunk)\n);\n\n\nexport default store;","import './Graph.css';\n\nconst Graph = (props) => {\n    return (\n      <div\n        className=\"graph\"\n        style={{\n          backgroundColor: props.colors.light\n        }}\n      >\n        {\n          props.array.map((value, idx) => (\n            <div\n              key={idx}\n              className={props.transition ? \"fast-bar-transition\"\n                          : props.initialized == 2 ? \"array-bar\"\n                          : \"slow-bar-transition\"}\n              style={{\n                height: `${value/10}%`,\n                backgroundColor: props.selected[idx] ? props.colors.selected : props.colors.accent\n              }}\n            />\n          ))\n        }\n      </div>\n    );\n}\n\n\nexport default Graph;","import React from 'react';\nimport './Slider.css';\n\n\nexport default class SideBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n    this.state = {\n      heightRatio: 0.8\n    }\n  }\n\n  handleChange(e) {\n    this.props.updateSize(e.target.value);\n  }\n\n  render() {\n    let outputPos = ((this.props.arraySize - this.props.min) * 100) / (this.props.max - this.props.min);\n    return (\n\t\t\t<div className='slider' style={{opacity: this.props.initialized ? 1 : 0}}>\n\t\t\t\t<input\n\t\t\t\t\ttype='range'\n\t\t\t\t\tmin={this.props.min}\n\t\t\t\t\tmax={this.props.max}\n\t\t\t\t\tvalue={this.props.arraySize}\n\t\t\t\t\tclassName='range-slider'\n\t\t\t\t\tid='range-slider'\n\t\t\t\t\taria-label='Array Size Slider'\n\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\twidth: this.props.query ? this.state.heightRatio * 100 + 'vh' : '100%',\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t\t<output\n\t\t\t\t\thtmlFor='range-slider'\n\t\t\t\t\tclassName='counter'\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tcolor: this.props.colors.text,\n\t\t\t\t\t\tbackgroundColor: this.props.colors.accent,\n\t\t\t\t\t\tbottom: this.props.query\n\t\t\t\t\t\t\t? `calc(${outputPos * this.state.heightRatio}vh - ${outputPos}*28px/100)`\n\t\t\t\t\t\t\t: 0,\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t{this.props.arraySize}\n\t\t\t\t</output>\n\t\t\t</div>\n\t\t);\n  }\n}","import './SidePanel.css'\n\nconst SidePanel = (props) => {\n    return (\n        <div className=\"side-panel\">\n            \n        </div>\n    );\n}\n\n\nexport default SidePanel;","import React from 'react';\nimport './Menu.css';\n\n\nexport default class Menu extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            btnCount: 0,\n            buttons: [\n                {text: 'New Array', onClick: this.props.actions.resetArray},\n                {text: 'Bubble Sort', onClick: this.props.actions.bubbleSort},\n                {text: 'Merge Sort', onClick: this.props.actions.mergeSort},\n                {text: 'Quick Sort', onClick: this.props.actions.quickSort}\n            ]\n        }\n    }\n\n    componentDidMount() {\n        this.setState({\n            btnCount: this.state.buttons.length\n        })\n    }\n\n    render() {\n        return (\n            <div\n                className=\"menu-container\"\n                style={{\n                    background: this.props.colors.light\n                }}\n            >\n                {this.state.buttons.map((button, idx) => (\n                    <button\n                        onClick={button.onClick}\n                        className=\"menu-item\"\n                        key={idx}\n                        style={{\n                            backgroundColor: this.props.colors.accent,\n                            borderColor: this.props.colors.text,\n                            color: this.props.colors.text,\n                            width: 90 / this.state.btnCount + '%',\n                            display: this.props.initialized ? '' : 'none'\n                        }}\n                    >{button.text}</button>\n                ))}\n            </div>\n        );\n    }\n}","import React from 'react';\nimport './Interface.css';\nimport Graph from './Graph/Graph';\nimport Slider from './Slider/Slider';\nimport SidePanel from './SidePanel/SidePanel';\nimport Menu from './Menu/Menu';\nimport '../Fonts/fonts.css';\n\n\nexport default class Interface extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      query: true\n    }\n    this.updateQuery = this.updateQuery.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.actions.init();\n    this.props.setColors({\n\t\t\tlight: '#182C61',\n\t\t\tbackdrop: '#130330',\n\t\t\taccent: '#1C5491',\n\t\t\tselected: '#D85A5E',\n\t\t\ttext: '#F5F5F5',\n\t\t});\n    this.updateQuery();\n    window.addEventListener('resize', () => {\n      this.updateQuery();\n    })\n    window.addEventListener('orientationchange', () => {\n      setTimeout(() => {\n        this.updateQuery();\n      }, 400);\n    })\n  }\n\n  componentDidUpdate() {\n    let innerHeight = window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight;\n    document.documentElement.style.setProperty('--inner-height', `${innerHeight}px`);\n  }\n\n  updateQuery() {\n    let query = window.matchMedia(\"(min-width: 850px)\").matches\n    this.setState({ query });\n    this.props.actions.updateMax(query ? 128 : 48);\n  }\n\n  render() {\n    return (\n\t\t\t<div className='interface' style={{backgroundColor: this.props.colors.backdrop}}>\n\t\t\t\t<div className='grid-wrapper'>\n\t\t\t\t\t<header\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tdisplay: this.props.initialized ? 'none' : '',\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<h1\n\t\t\t\t\t\t\tclassName='title'\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\tcolor: this.props.colors.text,\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tVisual Sorting App\n\t\t\t\t\t\t</h1>\n\t\t\t\t\t\t<h2\n\t\t\t\t\t\t\tclassName='sub-title'\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\tcolor: this.props.colors.text,\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tBy Bryn Deering\n\t\t\t\t\t\t</h2>\n\t\t\t\t\t</header>\n\t\t\t\t\t<Graph\n\t\t\t\t\t\tarray={this.props.array}\n\t\t\t\t\t\tselected={this.props.selected}\n\t\t\t\t\t\tcolors={this.props.colors}\n\t\t\t\t\t\tinitialized={this.props.initialized}\n\t\t\t\t\t\ttransition={this.props.transition}\n\t\t\t\t\t\tarraySize={this.props.arraySize}\n\t\t\t\t\t/>\n\t\t\t\t\t<Slider\n\t\t\t\t\t\tupdateSize={this.props.actions.updateSize}\n\t\t\t\t\t\tarraySize={this.props.arraySize}\n\t\t\t\t\t\tcolors={this.props.colors}\n\t\t\t\t\t\tinitialized={this.props.initialized}\n\t\t\t\t\t\tquery={this.state.query}\n\t\t\t\t\t\tmin={this.props.minSize}\n\t\t\t\t\t\tmax={this.props.maxSize}\n\t\t\t\t\t/>\n\t\t\t\t\t<SidePanel />\n\t\t\t\t\t<Menu\n\t\t\t\t\t\tactions={this.props.actions}\n\t\t\t\t\t\tcolors={this.props.colors}\n\t\t\t\t\t\tinitialized={this.props.initialized}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n  }\n}","import React from 'react';\nimport { Provider, connect } from 'react-redux';\nimport store from './store';\nimport { setColors, thunkActions } from './actions';\nimport Interface from '../Components/Interface';\nimport { bindActionCreators } from 'redux';\n\n\nconst mapStateToProps = (state) => {\n    return {\n        colors: state.interface.colors,\n        selected: state.interface.selected,\n        transition: state.interface.transition,\n        initialized: state.interface.initialized,\n        array: state.sorting.array,\n        arraySize: state.sorting.arraySize,\n        isSorting: state.sorting.isSorting,\n        minSize: state.sorting.minSize,\n        maxSize: state.sorting.maxSize\n    }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        setColors: (colorObject) => { dispatch(setColors(colorObject)) },\n        actions: bindActionCreators(thunkActions, dispatch)\n    }\n};\n\nconst Container = connect(mapStateToProps, mapDispatchToProps)(Interface);\n\n\nexport default class AppWrapper extends React.Component {\n    render() {\n        return (\n            <Provider store={store}>\n                <Container />\n            </Provider>\n        );\n    }\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport AppWrapper from './State/AppWrapper';\nimport reportWebVitals from './Tests/reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <AppWrapper />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}